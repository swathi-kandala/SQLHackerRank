1. Generate the following two result sets:
Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).
Query the number of ocurrences of each occupation in OCCUPATIONS. Sort the occurrences in ascending order, and output them in the following format: 
There are a total of [occupation_count] [occupation]s.
where [occupation_count] is the number of occurrences of an occupation in OCCUPATIONS and [occupation] is the lowercase occupation name. If more than one Occupation has the same [occupation_count], they should be ordered alphabetically

select concat(NAME, '(',left(OCCUPATION,1),')') from OCCUPATIONS
order by NAME;
select concat('There are a total of ',count(NAME),' ',lower(OCCUPATION),'s.') from OCCUPATIONS
group by OCCUPATION
order by count(NAME),OCCUPATION;


2. Pivot the Occupation column in OCCUPATIONS so that each Name is sorted alphabetically and displayed underneath its corresponding Occupation. The output column headers should be Doctor, Professor, Singer, and Actor, respectively

set @d=0,@p=0,@s=0,@a=0;
select min(Doctor), min(Professor), min(Singer), min(Actor)
from(
    select case 
    when OCCUPATION='Doctor' then @d:=@d+1
    when OCCUPATION='Professor' then @p:=@p+1
    when OCCUPATION='Singer' then @s:=@s+1
    when OCCUPATION='Actor' then @a:=@a+1
    end as row,
    case when OCCUPATION='Doctor' then NAME end as Doctor,
    case when OCCUPATION='Professor' then NAME end as Professor,
    case when OCCUPATION='Singer' then NAME end as Singer,
    case when OCCUPATION='Actor' then NAME end as Actor
from OCCUPATIONS 
order by NAME) tmp
group by row


3. Amber's conglomerate corporation just acquired some new companies. Each of the companies follows this hierarchy: Founder => Lead Manager => Senior Manager => Manager => Employee
Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers, total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code

select c.COMPANY_CODE, c.FOUNDER, count(distinct e.LEAD_MANAGER_CODE), count(distinct e.SENIOR_MANAGER_CODE), count(distinct e.MANAGER_CODE), count(distinct e.EMPLOYEE_CODE)
from COMPANY c join EMPLOYEE e
on c.COMPANY_CODE = e.COMPANY_CODE
group by c.COMPANY_CODE, c.FOUNDER
order by c.COMPANY_CODE


4. Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.
 a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
 b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
 c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
 d happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Manhattan Distance between points and round it to a scale of  decimal places

select round(abs(max(LAT_N)-min(LAT_N))+ abs(max(LONG_W)-min(LONG_W)),4) from STATION


5. Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.
 a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
 b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
 c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
 d happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Euclidian Distance between points and round it to a scale of  decimal places

select round(sqrt(Power((max(LAT_N)-min(LAT_N)), 2)+ Power((max(LONG_W)-min(LONG_W)), 2)),4) from STATION



6. 
